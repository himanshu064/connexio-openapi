const {
  country_enum,
  country_enum_titles,
} = require("../../../constants/country");
const {
  employee_enum,
  employee_enum_titles,
  employee_funnel_enum,
  employee_funnel_enum_titles,
} = require("../../../constants/employees");

const EmployeeFormSchema = {
  title: "",
  type: "object",
  properties: {
    role_in_organization: {
      type: "string",
      title: "Employee Role in The Organization",
      help: "Enter Employee's role in the organization (Eg. Sales Representative)",
      propertyOrder: 1,
    },
    birth_date: {
      type: "date",
      title: "Birth Date",
      help: "Please enter a birth date for employee",
      propertyOrder: 2,
    },
    ssn: {
      type: "string",
      title: "Social Security Number",
      help: "Please enter a SSN for employee",
      propertyOrder: 3,
    },
    marital_status: {
      enum: ["single", "married", "divorced", "n/a"],
      enum_titles: ["Single", "Married", "Divorced", "N/A"],
      type: "string",
      title: "Marital Status",
      help: "Please select a Marital Status for employee",
      propertyOrder: 4,
    },
    street1: {
      type: "string",
      title: "Address",
      help: "Please enter a address for employee",
      propertyOrder: 5,
    },
    street2: {
      type: "string",
      title: "Address 2",
      help: "Please enter a address 2 for employee",
      propertyOrder: 6,
    },
    city: {
      type: "string",
      title: "City",
      help: "Please enter a city for",
      propertyOrder: 7,
    },
    province: {
      type: "string",
      title: "Province",
      help: "Please enter a province for employee",
      propertyOrder: 8,
    },
    postal_code: {
      type: "string",
      title: "Postal Code",
      help: "Please enter a postal code for employee",
      propertyOrder: 9,
    },
    country: {
      enum: country_enum,
      enum_titles: country_enum_titles,
      type: "string",
      title: "Country",
      help: "Please enter a country for employee",
      propertyOrder: 10,
    },
    work_phone: {
      type: "string",
      title: "Work Phone Number",
      help: "Please enter a work phone number for employee",
      propertyOrder: 11,
    },
    mobile_phone: {
      type: "string",
      title: "Mobile Phone Number",
      help: "Please enter a mobile phone number for employee",
      propertyOrder: 12,
    },
    home_phone: {
      type: "string",
      title: "Home Phone Number",
      help: "Please enter a home phone number for employee",
      propertyOrder: 13,
    },
    business_mail: {
      type: "string",
      title: "Business Mail",
      widget: "email",
      help: "Please enter a business mail for employee",
      propertyOrder: 14,
    },
    approved: {
      type: "boolean",
      title: "Profile data is approved",
      widget: "checkbox",
      help: "Indicate if profile data has been checked and approved",
      propertyOrder: 15,
    },
    active: {
      type: "boolean",
      title: "Active",
      widget: "checkbox",
      help: "Indicates if employee is active or not",
      propertyOrder: 16,
    },
    department: {
      enum: ["1", "2", "4"],
      enum_titles: ["IT", "Support", "testing"],
      type: "string",
      title: "Department",
      attr: {
        resource_path: "departments",
        create_button_text: "Create a new department",
        "data-plugin-select2": true,
      },
      help: "Please select a department for employee",
      propertyOrder: 17,
    },
    job_type: {
      enum: ["1", "2"],
      enum_titles: ["Support", "eeee"],
      type: "string",
      title: "Job Type",
      attr: {
        resource_path: "job_types",
        create_button_text: "Create a new job types",
        "data-plugin-select2": true,
      },
      help: "Select a job type for the employee",
      propertyOrder: 18,
    },
    shift: {
      enum: ["1", "2", "7"],
      enum_titles: ["Opener", "hardcore full-time", "closer"],
      type: "string",
      title: "Shift for Employee",
      attr: {
        resource_path: "shifts",
        create_button_text: "Create a new shift",
        "data-plugin-select2": true,
      },
      help: "Select a shift for an employee. If not assigned a shift, the employee cannot track their time",
      propertyOrder: 19,
    },
    schedule: {
      enum: ["1", "2", "3", "4", "5", "7"],
      enum_titles: [
        "Vince Schedule",
        "Linda",
        "Sergey's schedule12",
        "Janella Schedule",
        "Testing",
        "demo",
      ],
      type: "string",
      title: "Schedule",
      attr: {
        resource_path: "schedules",
        create_button_text: "Create a new schedule",
        "data-plugin-select2": true,
      },
      help: "Select a schedule for employee. If not assigned to a schedule, an employee cannot report their working time",
      propertyOrder: 20,
    },
  },
  operations: [
    {
      title: "Edit",
      is_standard: true,
      method: "PATCH",
      key: "edit",
      route_suffix: "",
      visible: true,
    },
  ],
};

const EmployeeTableSchema = {
  type: "Employee",
  columns: [
    {
      type: "image",
      label: "Picture",
      property_name: "picture_url",
      filterable: false,
      sortable: false,
      visible: true,
      order: 1,
    },
    {
      type: "int",
      label: "ID",
      property_name: "id",
      filterable: true,
      sortable: true,
      visible: false,
      order: 1,
    },
    {
      type: "DateTime",
      label: "Terminated",
      property_name: "terminated_at",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Username",
      property_name: "user.username",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Role",
      property_name: "role_in_organization",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "bool",
      label: "Approved",
      property_name: "approved",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Name",
      property_name: "name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "string",
      label: "Second Name",
      property_name: "second_name",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Preferred Name",
      property_name: "preferred_name",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Last Name",
      property_name: "last_name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "DateTimeInterface",
      label: "Birth Date",
      property_name: "birth_date",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "SSN",
      property_name: "ssn",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Gender",
      property_name: "gender",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "string",
      label: "Marital Status",
      property_name: "marital_status",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Address",
      property_name: "street1",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Address 2",
      property_name: "street2",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "City",
      property_name: "city",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Province",
      property_name: "province",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Postal Code",
      property_name: "postal_code",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "string",
      label: "Country",
      property_name: "country",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "phone_number",
      label: "Work Phone Number",
      property_name: "work_phone",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "phone_number",
      label: "Mobile Phone Number",
      property_name: "mobile_phone",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "phone_number",
      label: "Home Phone Number",
      property_name: "home_phone",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "email",
      label: "Business Mail",
      property_name: "business_mail",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "email",
      label: "Mail",
      property_name: "mail",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "Schedule",
      label: "Schedule",
      property_name: "schedule.name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "boolean",
      label: "Active",
      property_name: "active",
      filterable: false,
      sortable: false,
      visible: false,
    },
    {
      type: "Department",
      label: "Department",
      property_name: "department.name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "JobType",
      label: "Job Type",
      property_name: "job_type.name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "Shift",
      label: "Shift",
      property_name: "shift.name",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "status",
      label: "Status",
      property_name: "employee_approved",
      filterable: false,
      sortable: false,
      visible: true,
    },
  ],
  operations: [
    {
      title: "Bulk edit",
      is_standard: false,
      key: "bulk_edit",
      visible: false,
    },
  ],
  size: 31,
  polymorphic_crud_types: [],
  primary_key: "id",
  search: false,
};

const EmployeeFunnelSubscriptionFormSchema = {
  title: "",
  type: "object",
  properties: {
    employee: {
      enum: employee_enum,
      enum_titles: employee_enum_titles,
      type: "string",
      title: "Choose Employee",
      attr: {
        "data-plugin-select2": true,
      },
      help: "Please select an employee",
      propertyOrder: 1,
    },
    funnel: {
      enum: employee_funnel_enum,
      enum_titles: employee_funnel_enum_titles,
      type: "string",
      title: "funnel",
      attr: {
        "data-plugin-select2": true,
      },
      propertyOrder: 2,
    },
    status: {
      type: "boolean",
      title: "status",
      widget: "checkbox",
      propertyOrder: 3,
    },
    start_date: {
      type: "datetime",
      title: "start_date",
      propertyOrder: 4,
    },
    end_date: {
      type: "datetime",
      title: "end_date",
      propertyOrder: 5,
    },
  },
  required: ["employee", "funnel", "status", "start_date", "end_date"],
  operations: [
    {
      title: "Edit",
      is_standard: true,
      method: "PATCH",
      key: "edit",
      route_suffix: "",
      visible: true,
    },
    {
      title: "Delete",
      is_standard: false,
      key: "delete",
      visible: true,
    },
  ],
};

const EmployeeFunnelSubscriptionTableSchema = {
  type: "EmployeeFunnelSubscription",
  columns: [
    {
      type: "int",
      label: "ID",
      property_name: "id",
      filterable: true,
      sortable: true,
      visible: false,
      order: 1,
    },
    {
      type: "Funnel",
      label: "Name",
      property_name: "funnel.name",
      filterable: true,
      sortable: true,
      visible: true,
    },
    {
      type: "DateTime",
      label: "Start Date",
      property_name: "start_date",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "DateTime",
      label: "End Date",
      property_name: "end_date",
      filterable: false,
      sortable: false,
      visible: true,
    },
    {
      type: "status",
      label: "Status",
      property_name: "status_data",
      filterable: false,
      sortable: false,
      visible: true,
    },
  ],
  operations: [
    {
      title: "Create",
      is_standard: true,
      method: "POST",
      key: "create",
      route_suffix: "",
      visible: false,
    },
    {
      title: "Bulk delete",
      is_standard: false,
      key: "bulk_delete",
      visible: false,
    },
    {
      title: "Bulk edit",
      is_standard: false,
      key: "bulk_edit",
      visible: false,
    },
  ],
  size: 7,
  polymorphic_crud_types: [],
  primary_key: "id",
  search: false,
  title: "Subscribed Funnels of sergey",
};

const Employees = {
  type: "array",
  $ref: "#/components/schemas/EmployeeTableSchema",
};

const EmployeeFunnels = {
  type: "array",
  $ref: "#/components/schemas/EmployeeFunnelSubscriptionTableSchema",
};

module.exports = {
  EmployeeFormSchema,
  EmployeeTableSchema,
  EmployeeFunnelSubscriptionFormSchema,
  EmployeeFunnelSubscriptionTableSchema,
  Employees,
  EmployeeFunnels,
};
